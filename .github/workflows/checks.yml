name: Pre-build Checks & Tests
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, v/*]

env:
  UV_FROZEN: 1    

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
            version: "latest"
            python-version: ${{ matrix.python }}
            activate-environment: true
            enable-cache: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          uv sync --no-extra docs
      - name: Execute Tests
        run: uv run task tests
      - name: Rename file
        env:
          VER: ${{ matrix.python }}
        run: mv ./coverage.xml ./coverage-$VER.xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}.xml
          path: coverage-${{ matrix.python }}.xml
      - name: Coveralls
        uses: coverallsapp/github-action@v2.3.0
        with:
          coverage-reporter-version: v0.6.14
          file: coverage-${{ matrix.python }}.xml
  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
            version: "latest"
            python-version: ${{ matrix.python }}
            activate-environment: true
            enable-cache: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          uv sync --no-extra docs
      - name: Run ruff
        run: uv run task ruff-lint
      - name: Run mypy
        run: uv run task mypy-lint
  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/download-artifact@v4
        with:
          name: coverage-3.13.xml
      - name: Rename file
        run: mv ./coverage{-3.13,}.xml
      - name: Fix code coverage paths
        run: |
          sed -i 's/\/home\/runner\/work\/py-cachify\/py-cachify\//\/github\/workspace\//g' /home/runner/work/py-cachify/py-cachify/coverage.xml
          cat /home/runner/work/py-cachify/py-cachify/coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
