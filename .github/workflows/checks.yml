name: Pre-build Checks & Tests
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12",]
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir "poetry==1.7.1"
          poetry install --no-root --no-interaction --no-ansi --without docs
      - name: Execute Tests
        run: poetry run task tests
      - uses: actions/upload-artifact@v3
        with:
          name: coverage.xml
          path: coverage.xml
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.xml
  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12",]
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir "poetry==1.7.1"
          poetry install --no-root --no-interaction --no-ansi --without docs
      - name: Run ruff
        run: poetry run task ruff-lint
      - name: Run mypy
        run: poetry run task mypy-lint
      - name: Run poetry check
        run: poetry run task poetry-check
      - name: Run pip check
        run: poetry run task pip-check
  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/download-artifact@v3
        with:
          name: coverage.xml
      - name: Override Coverage Source Path for Sonar
        run: sed -i "s/<source>\/home\/runner\/work\/repo<\/source>/<source>\/github\/workspace<\/source>/g" /home/runner/work/py-cachify/py-cachify/
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
